#syntax=docker/dockerfile:1

FROM condaforge/mambaforge:4.14.0-0 as conda

EXPOSE 5000
WORKDIR /app

#COPY images_v0/environments/conda-linux-64.lock .
#RUN mamba create --copy -p /env --file conda-linux-64.lock && conda clean -afy
#RUN --mount=type=cache,target=/opt/conda/pkgs mamba create --copy -p /env --file conda-linux-64.lock

COPY ChEMBL_Structure_Pipeline ChEMBL_Structure_Pipeline
COPY images_v0/api.py images_v0/predictor_loading.py images_v0/setup.py ./
COPY images_v0/riseqsar riseqsar
COPY images_v0/predictors/random_forest/herg_ogura	predictors
COPY images_v0/cmd.sh .

COPY images_v0/environments/base_environment/environment.yml .
RUN mamba env create && \
    mamba run -n base-predictor python -m pip install --no-deps rdkit==2022.03.5 && \
    mamba run -n base-predictor python -m pip install --no-deps ./ChEMBL_Structure_Pipeline && \
    mamba run -n base-predictor python -m pip install --no-deps -e .
#RUN rm -rf ./ChEMBL_Structure_Pipeline

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1   # prevent Python from making pyc files to disk
ENV PYTHONUNBUFFERED 1          # prevents Python from buffering stdout and stderr


#CMD ["mamba", "run", "-n", "base-predictor", "gunicorn", "-w", "4", "-b", "localhost:5000", "api:app"]
CMD ["sh", "cmd.sh"]
